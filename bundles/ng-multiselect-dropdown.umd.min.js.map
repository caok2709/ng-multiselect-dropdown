{"version":3,"sources":["ng://ng-multiselect-dropdown/multiselect.model.ts","ng://ng-multiselect-dropdown/multiselect.component.ts","ng://ng-multiselect-dropdown/click-outside.directive.ts","ng://ng-multiselect-dropdown/list-filter.pipe.ts","ng://ng-multiselect-dropdown/ng-multiselect-dropdown.module.ts"],"names":["ListItem","source","this","id","text","DROPDOWN_CONTROL_VALUE_ACCESSOR","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","MultiSelectComponent","multi","noop","cdr","data","singleSelection","allowAddChoice","idField","textField","enableCheckAll","selectAllText","unSelectAllText","allowSearchFilter","limitSelection","clearSearchFilter","maxHeight","itemsShowLimit","searchPlaceholderText","noDataAvailablePlaceholderText","closeDropDownOnSelection","showSelectedItemsAtTop","EventEmitter","prototype","value","_placeholder","_settings","Object","assign","defaultSettings","_data","map","item","_this","onFilterTextChange","$event","onFilterChange","emit","onEnterKeydownChange","filter","length","push","dataArray_1","onEnterChange","onItemClick","disabled","found","isSelected","allowAdd","selectedItems","removeSelected","addSelected","closeDropdown","writeValue","undefined","firstItem","e","splice","onChangeCallback","registerOnChange","fn","registerOnTouched","onTouchedCallback","onTouched","trackByFn","index","clickedItem","forEach","isLimitSelectionReached","isAllItemsSelected","showButton","itemShowRemaining","emittedValue","onSelect","itemSel","indexOf","onDeSelect","val","selected","Array","isArray","objectify","obj","toggleDropdown","evt","preventDefault","isDropdownOpen","toggleSelectAll","onDeSelectAll","slice","onSelectAll","Component","args","selector","template","styles","providers","changeDetection","ChangeDetectionStrategy","OnPush","ChangeDetectorRef","Input","Output","HostListener","ClickOutsideDirective","_elementRef","onClick","event","targetElement","nativeElement","contains","clickOutside","Directive","ElementRef","ListFilterPipe","transform","items","applyFilter","toLowerCase","Pipe","name","pure","NgMultiSelectDropDownModule","forRoot","ngModule","NgModule","imports","CommonModule","FormsModule","declarations","exports"],"mappings":"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","sourcesContent":["export interface IDropdownSettings {\n  singleSelection?: boolean;\n  allowAddChoice?: boolean;\n  idField?: string;\n  textField?: string;\n  enableCheckAll?: boolean;\n  selectAllText?: string;\n  unSelectAllText?: string;\n  allowSearchFilter?: boolean;\n  clearSearchFilter?: boolean;\n  maxHeight?: number;\n  itemsShowLimit?: number;\n  limitSelection?: number;\n  searchPlaceholderText?: string;\n  noDataAvailablePlaceholderText?: string;\n  closeDropDownOnSelection?: boolean;\n  showSelectedItemsAtTop?: boolean;\n}\n\nexport class ListItem {\n  id: String;\n  text: String;\n\n  public constructor(source: any) {\n    if (typeof source === 'string') {\n      this.id = this.text = source;\n    }\n    if (typeof source === 'object') {\n      this.id = source.id;\n      this.text = source.text;\n    }\n  }\n}\n","import {\n  Component,\n  HostListener,\n  forwardRef,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef\n} from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\nimport { ListItem, IDropdownSettings } from './multiselect.model';\n\nexport const DROPDOWN_CONTROL_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => MultiSelectComponent),\n  multi: true\n};\nconst noop = () => { };\n\n@Component({\n  selector: 'ng-multiselect-dropdown',\n  template: `<div tabindex=\"=0\" (blur)=\"onTouched()\" class=\"multiselect-dropdown\" (clickOutside)=\"closeDropdown()\">\n  <div [class.disabled]=\"disabled\">\n    <span tabindex=\"-1\" class=\"dropdown-btn\" (click)=\"toggleDropdown($event)\">\n      <span *ngIf=\"selectedItems.length == 0\">{{_placeholder}}</span>\n      <span class=\"selected-item\" *ngFor=\"let item of selectedItems;trackBy: trackByFn;let k = index\" [hidden]=\"k > _settings.itemsShowLimit-1\">\n        {{item.text}}\n        <a style=\"padding-top:2px;padding-left:2px;color:white\" (click)=\"onItemClick($event,item)\">x</a>\n      </span>\n      <span style=\"float:right !important;padding-right:4px\">\n        <span style=\"padding-right: 6px;\" *ngIf=\"itemShowRemaining()>0\">+{{itemShowRemaining()}}</span>\n        <span [ngClass]=\"isDropdownOpen ? 'dropdown-up' : 'dropdown-down'\"></span>\n      </span>\n    </span>\n  </div>\n  <div class=\"dropdown-list\" [hidden]=\"!isDropdownOpen\">\n    <ul class=\"item1\">\n      <li (click)=\"toggleSelectAll()\" *ngIf=\"_data.length > 0 && !_settings.singleSelection && _settings.enableCheckAll && _settings.limitSelection===-1\"\n        class=\"multiselect-item-checkbox\" style=\"border-bottom: 1px solid #ccc;padding:10px\">\n        <input type=\"checkbox\" [checked]=\"isAllItemsSelected()\" [disabled]=\"disabled || isLimitSelectionReached()\" />\n        <div>{{!isAllItemsSelected() ? _settings.selectAllText : _settings.unSelectAllText}}</div>\n      </li>\n      <li class=\"filter-textbox\" *ngIf=\"_data.length>0 && _settings.allowSearchFilter\">\n        <input type=\"text\" [readOnly]=\"disabled\" [placeholder]=\"_settings.searchPlaceholderText\" [(ngModel)]=\"filter.text\" (keydown.enter)=\"onEnterKeydownChange($event)\" (ngModelChange)=\"onFilterTextChange($event)\">\n      </li>\n    </ul>\n    <ul class=\"item2\" [style.maxHeight]=\"_settings.maxHeight+'px'\">\n      <li *ngFor=\"let item of _data | ng2ListFilter:filter; let i = index;\" (click)=\"onItemClick($event,item)\" class=\"multiselect-item-checkbox\">\n        <input type=\"checkbox\" [checked]=\"isSelected(item)\" [disabled]=\"disabled || (isLimitSelectionReached() && !isSelected(item))\"\n        />\n        <div>{{item.text}}</div>\n      </li>\n      <li class='no-data' *ngIf=\"_data.length == 0\">\n        <h5>{{_settings.noDataAvailablePlaceholderText}}</h5>\n      </li>\n    </ul>\n  </div>\n</div>\n`,\n  styles: [`.multiselect-dropdown{position:relative;width:100%}.multiselect-dropdown .dropdown-btn{display:inline-block;border:1px solid #adadad;width:100%;padding:6px 12px;margin-bottom:0;font-size:14px;font-weight:400;line-height:1.52857143;text-align:left;vertical-align:middle;cursor:pointer;background-image:none;border-radius:4px}.multiselect-dropdown .dropdown-btn .selected-item{border:1px solid #337ab7;margin-right:4px;background:#337ab7;padding:0 5px;color:#fff;border-radius:2px;float:left}.multiselect-dropdown .dropdown-btn .selected-item a{text-decoration:none}.multiselect-dropdown .dropdown-btn .selected-item:hover{box-shadow:1px 1px #959595}.multiselect-dropdown .dropdown-btn .dropdown-down{display:inline-block;top:10px;width:0;height:0;border-top:10px solid #adadad;border-left:10px solid transparent;border-right:10px solid transparent}.multiselect-dropdown .dropdown-btn .dropdown-up{display:inline-block;width:0;height:0;border-bottom:10px solid #adadad;border-left:10px solid transparent;border-right:10px solid transparent}.multiselect-dropdown .disabled>span{background-color:#eceeef}.dropdown-list{position:absolute;padding-top:6px;width:100%;z-index:9999;border:1px solid #ccc;border-radius:3px;background:#fff;margin-top:10px;box-shadow:0 1px 5px #959595}.dropdown-list ul{padding:0;list-style:none;overflow:auto;margin:0}.dropdown-list li{padding:6px 10px;cursor:pointer;text-align:left}.dropdown-list .filter-textbox{border-bottom:1px solid #ccc;position:relative;padding:10px}.dropdown-list .filter-textbox input{border:0;width:100%;padding:0 0 0 26px}.dropdown-list .filter-textbox input:focus{outline:0}.multiselect-item-checkbox input[type=checkbox]{border:0;clip:rect(0 0 0 0);height:1px;margin:-1px;overflow:hidden;padding:0;position:absolute;width:1px}.multiselect-item-checkbox input[type=checkbox]:focus+div:before,.multiselect-item-checkbox input[type=checkbox]:hover+div:before{border-color:#337ab7;background-color:#f2f2f2}.multiselect-item-checkbox input[type=checkbox]:active+div:before{transition-duration:0s}.multiselect-item-checkbox input[type=checkbox]+div{position:relative;padding-left:2em;vertical-align:middle;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;margin:0;color:#000}.multiselect-item-checkbox input[type=checkbox]+div:before{box-sizing:content-box;content:'';color:#337ab7;position:absolute;top:50%;left:0;width:14px;height:14px;margin-top:-9px;border:2px solid #337ab7;text-align:center;transition:.4s}.multiselect-item-checkbox input[type=checkbox]+div:after{box-sizing:content-box;content:'';position:absolute;-webkit-transform:scale(0);transform:scale(0);-webkit-transform-origin:50%;transform-origin:50%;transition:transform .2s ease-out,-webkit-transform .2s ease-out;background-color:transparent;top:50%;left:4px;width:8px;height:3px;margin-top:-4px;border-style:solid;border-color:#fff;border-width:0 0 3px 3px;-o-border-image:none;border-image:none;-webkit-transform:rotate(-45deg) scale(0);transform:rotate(-45deg) scale(0)}.multiselect-item-checkbox input[type=checkbox]:disabled+div:before{border-color:#ccc}.multiselect-item-checkbox input[type=checkbox]:disabled:focus+div:before .multiselect-item-checkbox input[type=checkbox]:disabled:hover+div:before{background-color:inherit}.multiselect-item-checkbox input[type=checkbox]:disabled:checked+div:before{background-color:#ccc}.multiselect-item-checkbox input[type=checkbox]:checked+div:after{content:'';transition:transform .2s ease-out,-webkit-transform .2s ease-out;-webkit-transform:rotate(-45deg) scale(1);transform:rotate(-45deg) scale(1)}.multiselect-item-checkbox input[type=checkbox]:checked+div:before{-webkit-animation:.2s ease-in borderscale;animation:.2s ease-in borderscale;background:#337ab7}@-webkit-keyframes borderscale{50%{box-shadow:0 0 0 2px #337ab7}}@keyframes borderscale{50%{box-shadow:0 0 0 2px #337ab7}}`],\n  providers: [DROPDOWN_CONTROL_VALUE_ACCESSOR],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MultiSelectComponent implements ControlValueAccessor {\n  public _settings: IDropdownSettings;\n  public _data: Array<ListItem> = [];\n  public selectedItems: Array<ListItem> = [];\n  public isDropdownOpen = false;\n  _placeholder = 'Select';\n  filter: ListItem = new ListItem(this.data);\n  defaultSettings: IDropdownSettings = {\n    singleSelection: false,\n    allowAddChoice: false,\n    idField: 'id',\n    textField: 'text',\n    enableCheckAll: true,\n    selectAllText: 'Select All',\n    unSelectAllText: 'UnSelect All',\n    allowSearchFilter: false,\n    limitSelection: -1,\n    clearSearchFilter: true,\n    maxHeight: 197,\n    itemsShowLimit: 999999999999,\n    searchPlaceholderText: 'Search',\n    noDataAvailablePlaceholderText: 'No data available',\n    closeDropDownOnSelection: false,\n    showSelectedItemsAtTop: false\n  };\n\n  @Input()\n  public set placeholder(value: string) {\n    if (value) {\n      this._placeholder = value;\n    } else {\n      this._placeholder = 'Select';\n    }\n  }\n  @Input() disabled = false;\n\n  @Input()\n  public set settings(value: IDropdownSettings) {\n    if (value) {\n      this._settings = Object.assign(this.defaultSettings, value);\n    } else {\n      this._settings = Object.assign(this.defaultSettings);\n    }\n  }\n\n  @Input()\n  public set data(value: Array<any>) {\n    if (!value) {\n      this._data = [];\n    } else {\n      // const _items = value.filter((item: any) => {\n      //   if (typeof item === 'string' || (typeof item === 'object' && item && item[this._settings.idField] && item[this._settings.textField])) {\n      //     return item;\n      //   }\n      // });\n      this._data = value.map(\n        (item: any) =>\n          typeof item === 'string'\n            ? new ListItem(item)\n            : new ListItem({\n              id: item[this._settings.idField],\n              text: item[this._settings.textField]\n            })\n      );\n    }\n  }\n\n  @Output('onFilterChange') onFilterChange: EventEmitter<ListItem> = new EventEmitter<any>();\n\n  @Output('onSelect') onSelect: EventEmitter<ListItem> = new EventEmitter<any>();\n\n  @Output('onDeSelect') onDeSelect: EventEmitter<ListItem> = new EventEmitter<any>();\n\n  @Output('onSelectAll') onSelectAll: EventEmitter<Array<ListItem>> = new EventEmitter<Array<any>>();\n\n  @Output('onDeSelectAll') onDeSelectAll: EventEmitter<Array<ListItem>> = new EventEmitter<Array<any>>();\n\n  @Output('onEnterChange') onEnterChange: EventEmitter<Array<ListItem>> = new EventEmitter<Array<any>>();\n\n  private onTouchedCallback: () => void = noop;\n  private onChangeCallback: (_: any) => void = noop;\n\n  onFilterTextChange($event) {\n    this.onFilterChange.emit($event);\n  }\n\n  onEnterKeydownChange($event) {\n    if (this.filter.text && this._settings.allowAddChoice) {\n      if (this._data.filter(function (item) {\n        if (typeof item === 'string') {\n          return item === this.filter.text;\n        } else {\n          return item[this._settings.textField] === this.filter.text;\n        }\n      }).length === 0\n      ) {\n        this._data.push(new ListItem(this.filter.text));\n        const dataArray = [];\n        this._data.map(function (item) {\n          dataArray.push(item[this._settings.textField]);\n        });\n        this.onEnterChange.emit(dataArray);\n      }\n\n    }\n  }\n\n  constructor(private cdr: ChangeDetectorRef) {\n  }\n\n  onItemClick($event: any, item: ListItem) {\n    if (this.disabled) {\n      return false;\n    }\n\n    const found = this.isSelected(item);\n    const allowAdd = this._settings.limitSelection === -1 || (this._settings.limitSelection > 0 && this.selectedItems.length < this._settings.limitSelection);\n    if (!found) {\n      if (allowAdd) {\n        this.addSelected(item);\n      }\n    } else {\n      this.removeSelected(item);\n    }\n    if (this._settings.singleSelection && this._settings.closeDropDownOnSelection) {\n      this.closeDropdown();\n    }\n  }\n\n  writeValue(value: any) {\n    if (value !== undefined && value !== null) {\n      if (this._settings.singleSelection) {\n        try {\n          if (value.length >= 1) {\n            const firstItem = (typeof value === 'string') ? value : value[0];\n            this.selectedItems = [\n              typeof firstItem === 'string'\n                ? new ListItem(firstItem)\n                : new ListItem({\n                  id: firstItem[this._settings.idField],\n                  text: firstItem[this._settings.textField]\n                })\n            ];\n          }\n        } catch (e) {\n          // console.error(e.body.msg);\n        }\n      } else if (value.length > 0) {\n        const _data = value.map(\n          (item: any) =>\n            typeof item === 'string'\n              ? new ListItem(item)\n              : new ListItem({\n                id: item[this._settings.idField],\n                text: item[this._settings.textField]\n              })\n        );\n        if (this._settings.limitSelection > 0) {\n          this.selectedItems = _data.splice(0, this._settings.limitSelection);\n        } else {\n          this.selectedItems = _data;\n        }\n      }\n    } else {\n      this.selectedItems = [];\n    }\n    this.onChangeCallback(value);\n  }\n\n  // From ControlValueAccessor interface\n  registerOnChange(fn: any) {\n    this.onChangeCallback = fn;\n  }\n\n  // From ControlValueAccessor interface\n  registerOnTouched(fn: any) {\n    this.onTouchedCallback = fn;\n  }\n\n  // Set touched on blur\n  @HostListener('blur')\n  public onTouched() {\n    this.closeDropdown();\n    this.onTouchedCallback();\n  }\n\n  trackByFn(index, item) {\n    return item.id;\n  }\n\n  isSelected(clickedItem: ListItem) {\n    let found = false;\n    this.selectedItems.forEach(item => {\n      if (clickedItem.id === item.id) {\n        found = true;\n      }\n    });\n    return found;\n  }\n\n  isLimitSelectionReached(): boolean {\n    return this._settings.limitSelection === this.selectedItems.length;\n  }\n\n  isAllItemsSelected(): boolean {\n    return this._data.length === this.selectedItems.length;\n  }\n\n  showButton(): boolean {\n    if (!this._settings.singleSelection) {\n      if (this._settings.limitSelection > 0) {\n        return false;\n      }\n      // this._settings.enableCheckAll = this._settings.limitSelection === -1 ? true : false;\n      return true; // !this._settings.singleSelection && this._settings.enableCheckAll && this._data.length > 0;\n    } else {\n      // should be disabled in single selection mode\n      return false;\n    }\n  }\n\n  itemShowRemaining(): number {\n    return this.selectedItems.length - this._settings.itemsShowLimit;\n  }\n\n  addSelected(item: ListItem) {\n    if (this._settings.singleSelection) {\n      this.selectedItems = [];\n      this.selectedItems.push(item);\n    } else {\n      this.selectedItems.push(item);\n    }\n    this.onChangeCallback(this.emittedValue(this.selectedItems));\n    this.onSelect.emit(this.emittedValue(item));\n  }\n\n  removeSelected(itemSel: ListItem) {\n    this.selectedItems.forEach(item => {\n      if (itemSel.id === item.id) {\n        this.selectedItems.splice(this.selectedItems.indexOf(item), 1);\n      }\n    });\n    this.onChangeCallback(this.emittedValue(this.selectedItems));\n    this.onDeSelect.emit(this.emittedValue(itemSel));\n  }\n\n  emittedValue(val: any): any {\n    const selected = [];\n    if (Array.isArray(val)) {\n      val.map(item => {\n        if (item.id === item.text) {\n          selected.push(item.text);\n        } else {\n          selected.push(this.objectify(item));\n        }\n      });\n    } else {\n      if (val) {\n        if (val.id === val.text) {\n          return val.text;\n        } else {\n          return this.objectify(val);\n        }\n      }\n    }\n    return selected;\n  }\n\n  objectify(val: ListItem) {\n    const obj = {};\n    obj[this._settings.idField] = val.id;\n    obj[this._settings.textField] = val.text;\n    return obj;\n  }\n\n  toggleDropdown(evt) {\n    evt.preventDefault();\n    if (this.disabled && this._settings.singleSelection) {\n      return;\n    }\n    this.isDropdownOpen = !this.isDropdownOpen;\n  }\n\n  closeDropdown() {\n    this.isDropdownOpen = false;\n    // clear search text\n    if (this._settings.clearSearchFilter) {\n      this.filter.text = '';\n    }\n  }\n\n  toggleSelectAll() {\n    if (this.disabled) {\n      return false;\n    }\n    if (!this.isAllItemsSelected()) {\n      this.selectedItems = this._data.slice();\n      this.onSelectAll.emit(this.emittedValue(this.selectedItems));\n    } else {\n      this.selectedItems = [];\n      this.onDeSelectAll.emit(this.emittedValue(this.selectedItems));\n    }\n    this.onChangeCallback(this.emittedValue(this.selectedItems));\n  }\n}\n","import {Directive, ElementRef, Output, EventEmitter, HostListener} from '@angular/core';\n\n@Directive({\n    selector: '[clickOutside]'\n})\nexport class ClickOutsideDirective {\n    constructor(private _elementRef: ElementRef) {\n    }\n\n    @Output()\n    public clickOutside = new EventEmitter<MouseEvent>();\n\n    @HostListener('document:click', ['$event', '$event.target'])\n    public onClick(event: MouseEvent, targetElement: HTMLElement): void {\n        if (!targetElement) {\n            return;\n        }\n\n        const clickedInside = this._elementRef.nativeElement.contains(targetElement);\n        if (!clickedInside) {\n            this.clickOutside.emit(event);\n        }\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\nimport { ListItem } from './multiselect.model';\n\n@Pipe({\n    name: 'ng2ListFilter',\n    pure: false\n})\nexport class ListFilterPipe implements PipeTransform {\n    transform(items: ListItem[], filter: ListItem): ListItem[] {\n        if (!items || !filter) {\n            return items;\n        }\n        return items.filter((item: ListItem) => this.applyFilter(item, filter));\n    }\n\n    applyFilter(item: ListItem, filter: ListItem): boolean {\n        return !(filter.text && item.text && item.text.toLowerCase().indexOf(filter.text.toLowerCase()) === -1);\n    }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { MultiSelectComponent } from './multiselect.component';\nimport { ClickOutsideDirective } from './click-outside.directive';\nimport { ListFilterPipe } from './list-filter.pipe';\n\n@NgModule({\n  imports: [CommonModule, FormsModule],\n  declarations: [MultiSelectComponent, ClickOutsideDirective, ListFilterPipe],\n  exports: [MultiSelectComponent]\n})\n\nexport class NgMultiSelectDropDownModule {\n    static forRoot(): ModuleWithProviders {\n      return {\n        ngModule: NgMultiSelectDropDownModule\n      };\n    }\n}\n"]}